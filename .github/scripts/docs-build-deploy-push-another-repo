#!/bin/sh
# Generally, `mike` is designed to work on a website stored on a branch of the
# same repo. This calls mike in a way to have it work on the main branch of a
# different repo.
#
# This can be used either to store the website on the `jj/` subdirectory
# of a personal site or the toplevel of an org site GitHub repo like
# "https://github.com/org_or_user/org_or_user.github.io"
#
# The script is a bit brittle; it is designed for the GitHub Actions environment
# where a remote named `doc-remote` does not initially exist.
set -e

DOC_REPO_URL=${DOC_REPO_URL:-"https://github.com/ilyagr/ilyagr.github.io"}
DOC_REPO_BRANCH_NAME=${DOC_REPO_BRANCH_NAME:-"main"}
DEPLOY_PREFIX=${DEPLOY_PREFIX:-"jj/"}
SITE_URL_FOR_MKDOCS=${SITE_URL_FOR_MKDOCS:-"https://martinvonz.github.io/jj/"}

# To avoid collisions with existing branches
random_digits() {
  awk -v min=0 -v max=100000000 'BEGIN{srand(); print int(min+rand()*(max-min+1))}'
}

LOCAL_BRANCH_NAME_PREFIX=${LOCAL_BRANCH_NAME_PREFIX:-"doc-remote-"}
LOCAL_BRANCH_NAME=${LOCAL_BRANCH_NAME:-"$LOCAL_BRANCH_NAME_PREFIX$DOC_REPO_BRANCH_NAME-$(random_digits)"}

mydir=$(dirname "$0")
set -x

git remote add --track "$DOC_REPO_BRANCH_NAME" --fetch --no-tags doc-remote "$DOC_REPO_URL"
git branch "$LOCAL_BRANCH_NAME" doc-remote/"$DOC_REPO_BRANCH_NAME"
sh "$mydir"/docs-build-deploy "$SITE_URL_FOR_MKDOCS" \
   -r doc-remote -b "$LOCAL_BRANCH_NAME" --deploy-prefix "$DEPLOY_PREFIX" \
   "$@"
git push doc-remote "$LOCAL_BRANCH_NAME":"$DOC_REPO_BRANCH_NAME"
